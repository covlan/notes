version: '3.8'

services:
  # 应用服务
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: note_app
    restart: always
    ports:
      - "5660:5660"
    environment:
      - NODE_ENV=production
      - PORT=5660
      - MONGODB_URI=mongodb://mongo:27017/note-app
      - JWT_SECRET=${JWT_SECRET:-YB4bshsj3fLD9IbOmvNlzW1NGFMvEoXpfznOuKn7YUjMa3txA4PQCSLiIqRw}
      - JWT_EXPIRE=7d
      - JWT_COOKIE_EXPIRE=7
      - FRONTEND_URL=http://localhost:5660
      - CORS_ORIGIN=http://localhost:5660
    depends_on:
      mongo:
        condition: service_healthy
    volumes:
      - ./src/uploads:/app/src/uploads
      - files_data:/app/files
    networks:
      - note_app_network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:5660/health"]
      interval: 20s
      timeout: 10s
      retries: 3
      start_period: 30s
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 500M

  # MongoDB数据库服务
  mongo:
    image: mongo:6
    container_name: note_app_mongo
    restart: always
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - note_app_network
    environment:
      - MONGO_INITDB_DATABASE=note-app
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 10s
    deploy:
      resources:
        limits:
          cpus: '0.3'
          memory: 300M

# 持久化卷
volumes:
  mongo_data:
    driver: local
  files_data:
    driver: local

# 网络配置
networks:
  note_app_network:
    driver: bridge 